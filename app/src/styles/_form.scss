@use 'util/mixins';

input[type='date'],
input[type='datetime-local'] {
  box-sizing: content-box;
  appearance: none;
  block-size: 1.2rem;
}

input:not([type='range'], [type='radio'], [type='checkbox'], [type='button']),
textarea,
select {
  @include mixins.focusable-ui-component;

  min-inline-size: 2rem;
  color: var(--input-foreground-color);
  background: var(--input-background-color);
  border: 1px solid var(--input-border-color);

  &:disabled {
    color: var(--disabled-input-foreground-color);
    background: var(--disabled-input-background-color);
    border-color: var(--disabled-input-border-color);
  }

  &:user-valid {
    border-color: var(--success-border);
    box-shadow: 0 0 2px var(--success-border);
  }

  &:user-invalid {
    border-color: var(--error-border);
    box-shadow: 0 0 2px var(--error-border);
  }

  @supports not selector(:user-invalid) {
    &:valid {
      border-color: var(--success-border);
      box-shadow: 0 0 2px var(--success-border);
    }

    &:invalid {
      border-color: var(--error-border);
      box-shadow: 0 0 2px var(--error-border);
    }
  }
}

button,
input[type='button'] {
  @include mixins.focusable-ui-component;

  margin-block: 0;
  margin-inline: 0;
  color: var(--button-foreground-color);
  cursor: pointer;
  background: var(--button-background-color);
  border: thin solid var(--button-border-color);

  &:disabled {
    color: var(--disabled-button-foreground-color);
    background: var(--disabled-button-background-color);
    border-color: var(--disabled-button-border-color);
  }
}

.form-grid {
  display: grid;
  grid-template-columns: max-content auto;
  row-gap: 0.5rem;
  column-gap: 1rem;
  align-items: center;

  > label {
    padding-inline-start: 2rem;
    text-align: right;
  }

  > [data-start='1'] {
    grid-column-start: 1;
  }

  > [data-start='2'] {
    grid-column-start: 2;
  }

  > [data-start='3'] {
    grid-column-start: 3;
  }

  > [data-span='2'] {
    grid-column: span 2;
  }

  > [data-span='3'] {
    grid-column: span 3;
  }

  > hr,
  > [data-span='full'] {
    grid-column: 1 / span 2;

    & + * {
      grid-column-start: 1;
    }
  }

  &[data-suffix] {
    grid-template-columns: max-content auto max-content;

    > [data-span='full'] {
      grid-column: 1 / span 3;
    }
  }
}

.actions {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}
