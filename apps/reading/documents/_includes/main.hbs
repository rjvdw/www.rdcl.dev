---
title: rdcl.dev
---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>{{ title }}</title>
  <link rel="stylesheet" href="/shared-styles/main.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/themes/prism-tomorrow.min.css">
  <script defer src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/components/prism-core.min.js"></script>
  <script defer src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.19.0/plugins/autoloader/prism-autoloader.min.js"></script>
</head>
<body>
<nav>
  <a href="{{ url "/" }}">Home</a>
</nav>
<main>{{{ content }}}</main>
<script type="module">
  const main = document.body.querySelector('main')

  document.body.addEventListener('click', (event) => {
    let el = event.target
    while (el !== document.body && el.tagName !== 'A') el = el.parentElement
    if (el.tagName !== 'A') return

    if (isExternalLink(el)) {
      el.target = '_blank'
    } else if (el.pathname.startsWith('/reading/')) {
      event.preventDefault()
      history.pushState(null, '', el.href)
      fetchPage(el)
    }
  })

  window.addEventListener('popstate', (event) => {
    console.log(event)
    fetchPage(location)
  })

  function isExternalLink(a) {
    return a.hostname && a.hostname !== location.hostname
  }

  async function fetchPage(location) {
    const result = await fetch(location.href)
    const content = await result.text()

    main.innerHTML = parse(content)
    Prism.highlightAll()
  }

  function parse(content) {
    const start = content.indexOf('<main>') + '<main>'.length
    const end = content.indexOf('</main>', start)

    return content.substring(start, end)
  }
</script>
</body>
</html>
